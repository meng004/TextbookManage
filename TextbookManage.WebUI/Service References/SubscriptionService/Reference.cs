//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18449
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TextbookManage.WebUI.SubscriptionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionForSubmitView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    public partial class SubscriptionForSubmitView : TextbookManage.WebUI.SubscriptionService.TextbookForDeclarationView {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeclarationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TextbookManage.WebUI.SubscriptionService.DeclarationView[] DeclarationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriptionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeclarationCount {
            get {
                return this.DeclarationCountField;
            }
            set {
                if ((object.ReferenceEquals(this.DeclarationCountField, value) != true)) {
                    this.DeclarationCountField = value;
                    this.RaisePropertyChanged("DeclarationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TextbookManage.WebUI.SubscriptionService.DeclarationView[] Declarations {
            get {
                return this.DeclarationsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeclarationsField, value) != true)) {
                    this.DeclarationsField = value;
                    this.RaisePropertyChanged("Declarations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriptionId {
            get {
                return this.SubscriptionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionIdField, value) != true)) {
                    this.SubscriptionIdField = value;
                    this.RaisePropertyChanged("SubscriptionId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseViewModel", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.SubscriptionService.DeclarationView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.SubscriptionService.SchoolView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.SubscriptionService.ResponseView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.SubscriptionService.FeedbackStateView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.SubscriptionService.TextbookForDeclarationView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView))]
    public partial class BaseViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeleteFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckFlag {
            get {
                return this.CheckFlagField;
            }
            set {
                if ((this.CheckFlagField.Equals(value) != true)) {
                    this.CheckFlagField = value;
                    this.RaisePropertyChanged("CheckFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeleteFlag {
            get {
                return this.DeleteFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.DeleteFlagField, value) != true)) {
                    this.DeleteFlagField = value;
                    this.RaisePropertyChanged("DeleteFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDelete {
            get {
                return this.IsDeleteField;
            }
            set {
                if ((this.IsDeleteField.Equals(value) != true)) {
                    this.IsDeleteField = value;
                    this.RaisePropertyChanged("IsDelete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeclarationView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    public partial class DeclarationView : TextbookManage.WebUI.SubscriptionService.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeclarantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeclarationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeclarationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotNeedTextbookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TeachingTaskNumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextbookIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Declarant {
            get {
                return this.DeclarantField;
            }
            set {
                if ((object.ReferenceEquals(this.DeclarantField, value) != true)) {
                    this.DeclarantField = value;
                    this.RaisePropertyChanged("Declarant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeclarationCount {
            get {
                return this.DeclarationCountField;
            }
            set {
                if ((object.ReferenceEquals(this.DeclarationCountField, value) != true)) {
                    this.DeclarationCountField = value;
                    this.RaisePropertyChanged("DeclarationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeclarationId {
            get {
                return this.DeclarationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeclarationIdField, value) != true)) {
                    this.DeclarationIdField = value;
                    this.RaisePropertyChanged("DeclarationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotNeedTextbook {
            get {
                return this.NotNeedTextbookField;
            }
            set {
                if ((this.NotNeedTextbookField.Equals(value) != true)) {
                    this.NotNeedTextbookField = value;
                    this.RaisePropertyChanged("NotNeedTextbook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] TeachingTaskNums {
            get {
                return this.TeachingTaskNumsField;
            }
            set {
                if ((object.ReferenceEquals(this.TeachingTaskNumsField, value) != true)) {
                    this.TeachingTaskNumsField = value;
                    this.RaisePropertyChanged("TeachingTaskNums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextbookId {
            get {
                return this.TextbookIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TextbookIdField, value) != true)) {
                    this.TextbookIdField = value;
                    this.RaisePropertyChanged("TextbookId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchoolView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    public partial class SchoolView : TextbookManage.WebUI.SubscriptionService.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchoolIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchoolId {
            get {
                return this.SchoolIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolIdField, value) != true)) {
                    this.SchoolIdField = value;
                    this.RaisePropertyChanged("SchoolId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    public partial class ResponseView : TextbookManage.WebUI.SubscriptionService.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedbackStateView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    public partial class FeedbackStateView : TextbookManage.WebUI.SubscriptionService.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextbookForDeclarationView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView))]
    public partial class TextbookForDeclarationView : TextbookManage.WebUI.SubscriptionService.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsbnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextbookIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Isbn {
            get {
                return this.IsbnField;
            }
            set {
                if ((object.ReferenceEquals(this.IsbnField, value) != true)) {
                    this.IsbnField = value;
                    this.RaisePropertyChanged("Isbn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Num {
            get {
                return this.NumField;
            }
            set {
                if ((object.ReferenceEquals(this.NumField, value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextbookId {
            get {
                return this.TextbookIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TextbookIdField, value) != true)) {
                    this.TextbookIdField = value;
                    this.RaisePropertyChanged("TextbookId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubscriptionService.ISubscriptionAppl")]
    public interface ISubscriptionAppl {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsByTextbook", ReplyAction="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsByTextbookResponse")]
        TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] CreateSubscriptionsByTextbook(string term, string textbookName, string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsByTextbook", ReplyAction="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsByTextbookResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[]> CreateSubscriptionsByTextbookAsync(string term, string textbookName, string isbn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/GetSchoolWithNotSub", ReplyAction="http://tempuri.org/ISubscriptionAppl/GetSchoolWithNotSubResponse")]
        TextbookManage.WebUI.SubscriptionService.SchoolView[] GetSchoolWithNotSub(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/GetSchoolWithNotSub", ReplyAction="http://tempuri.org/ISubscriptionAppl/GetSchoolWithNotSubResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SchoolView[]> GetSchoolWithNotSubAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsBySchoolId", ReplyAction="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsBySchoolIdResponse")]
        TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] CreateSubscriptionsBySchoolId(string term, string schoolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsBySchoolId", ReplyAction="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsBySchoolIdResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[]> CreateSubscriptionsBySchoolIdAsync(string term, string schoolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/GetPressWithNotSub", ReplyAction="http://tempuri.org/ISubscriptionAppl/GetPressWithNotSubResponse")]
        string[] GetPressWithNotSub(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/GetPressWithNotSub", ReplyAction="http://tempuri.org/ISubscriptionAppl/GetPressWithNotSubResponse")]
        System.Threading.Tasks.Task<string[]> GetPressWithNotSubAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsByPress", ReplyAction="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsByPressResponse")]
        TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] CreateSubscriptionsByPress(string term, string press);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsByPress", ReplyAction="http://tempuri.org/ISubscriptionAppl/CreateSubscriptionsByPressResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[]> CreateSubscriptionsByPressAsync(string term, string press);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/SubmitSubscriptions", ReplyAction="http://tempuri.org/ISubscriptionAppl/SubmitSubscriptionsResponse")]
        TextbookManage.WebUI.SubscriptionService.ResponseView SubmitSubscriptions(string booksellerId, string spareCount, TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] subscriptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/SubmitSubscriptions", ReplyAction="http://tempuri.org/ISubscriptionAppl/SubmitSubscriptionsResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.ResponseView> SubmitSubscriptionsAsync(string booksellerId, string spareCount, TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] subscriptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/GetFeedbackState", ReplyAction="http://tempuri.org/ISubscriptionAppl/GetFeedbackStateResponse")]
        TextbookManage.WebUI.SubscriptionService.FeedbackStateView[] GetFeedbackState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/GetFeedbackState", ReplyAction="http://tempuri.org/ISubscriptionAppl/GetFeedbackStateResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.FeedbackStateView[]> GetFeedbackStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/GetSubscriptions", ReplyAction="http://tempuri.org/ISubscriptionAppl/GetSubscriptionsResponse")]
        TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] GetSubscriptions(string term, TextbookManage.WebUI.SubscriptionService.FeedbackStateView state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/GetSubscriptions", ReplyAction="http://tempuri.org/ISubscriptionAppl/GetSubscriptionsResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[]> GetSubscriptionsAsync(string term, TextbookManage.WebUI.SubscriptionService.FeedbackStateView state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/RemoveSubscriptions", ReplyAction="http://tempuri.org/ISubscriptionAppl/RemoveSubscriptionsResponse")]
        TextbookManage.WebUI.SubscriptionService.ResponseView RemoveSubscriptions(TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] subscriptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionAppl/RemoveSubscriptions", ReplyAction="http://tempuri.org/ISubscriptionAppl/RemoveSubscriptionsResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.ResponseView> RemoveSubscriptionsAsync(TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] subscriptions);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubscriptionApplChannel : TextbookManage.WebUI.SubscriptionService.ISubscriptionAppl, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubscriptionApplClient : System.ServiceModel.ClientBase<TextbookManage.WebUI.SubscriptionService.ISubscriptionAppl>, TextbookManage.WebUI.SubscriptionService.ISubscriptionAppl {
        
        public SubscriptionApplClient() {
        }
        
        public SubscriptionApplClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubscriptionApplClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionApplClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionApplClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] CreateSubscriptionsByTextbook(string term, string textbookName, string isbn) {
            return base.Channel.CreateSubscriptionsByTextbook(term, textbookName, isbn);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[]> CreateSubscriptionsByTextbookAsync(string term, string textbookName, string isbn) {
            return base.Channel.CreateSubscriptionsByTextbookAsync(term, textbookName, isbn);
        }
        
        public TextbookManage.WebUI.SubscriptionService.SchoolView[] GetSchoolWithNotSub(string term) {
            return base.Channel.GetSchoolWithNotSub(term);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SchoolView[]> GetSchoolWithNotSubAsync(string term) {
            return base.Channel.GetSchoolWithNotSubAsync(term);
        }
        
        public TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] CreateSubscriptionsBySchoolId(string term, string schoolId) {
            return base.Channel.CreateSubscriptionsBySchoolId(term, schoolId);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[]> CreateSubscriptionsBySchoolIdAsync(string term, string schoolId) {
            return base.Channel.CreateSubscriptionsBySchoolIdAsync(term, schoolId);
        }
        
        public string[] GetPressWithNotSub(string term) {
            return base.Channel.GetPressWithNotSub(term);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPressWithNotSubAsync(string term) {
            return base.Channel.GetPressWithNotSubAsync(term);
        }
        
        public TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] CreateSubscriptionsByPress(string term, string press) {
            return base.Channel.CreateSubscriptionsByPress(term, press);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[]> CreateSubscriptionsByPressAsync(string term, string press) {
            return base.Channel.CreateSubscriptionsByPressAsync(term, press);
        }
        
        public TextbookManage.WebUI.SubscriptionService.ResponseView SubmitSubscriptions(string booksellerId, string spareCount, TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] subscriptions) {
            return base.Channel.SubmitSubscriptions(booksellerId, spareCount, subscriptions);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.ResponseView> SubmitSubscriptionsAsync(string booksellerId, string spareCount, TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] subscriptions) {
            return base.Channel.SubmitSubscriptionsAsync(booksellerId, spareCount, subscriptions);
        }
        
        public TextbookManage.WebUI.SubscriptionService.FeedbackStateView[] GetFeedbackState() {
            return base.Channel.GetFeedbackState();
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.FeedbackStateView[]> GetFeedbackStateAsync() {
            return base.Channel.GetFeedbackStateAsync();
        }
        
        public TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] GetSubscriptions(string term, TextbookManage.WebUI.SubscriptionService.FeedbackStateView state) {
            return base.Channel.GetSubscriptions(term, state);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[]> GetSubscriptionsAsync(string term, TextbookManage.WebUI.SubscriptionService.FeedbackStateView state) {
            return base.Channel.GetSubscriptionsAsync(term, state);
        }
        
        public TextbookManage.WebUI.SubscriptionService.ResponseView RemoveSubscriptions(TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] subscriptions) {
            return base.Channel.RemoveSubscriptions(subscriptions);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.SubscriptionService.ResponseView> RemoveSubscriptionsAsync(TextbookManage.WebUI.SubscriptionService.SubscriptionForSubmitView[] subscriptions) {
            return base.Channel.RemoveSubscriptionsAsync(subscriptions);
        }
    }
}
