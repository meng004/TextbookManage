//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TextbookManage.WebUI.TermService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TermView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    public partial class TermView : TextbookManage.WebUI.TermService.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YearTermField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsCurrent {
            get {
                return this.IsCurrentField;
            }
            set {
                if ((object.ReferenceEquals(this.IsCurrentField, value) != true)) {
                    this.IsCurrentField = value;
                    this.RaisePropertyChanged("IsCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YearTerm {
            get {
                return this.YearTermField;
            }
            set {
                if ((object.ReferenceEquals(this.YearTermField, value) != true)) {
                    this.YearTermField = value;
                    this.RaisePropertyChanged("YearTerm");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseViewModel", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.TermService.TermView))]
    public partial class BaseViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeleteFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckFlag {
            get {
                return this.CheckFlagField;
            }
            set {
                if ((this.CheckFlagField.Equals(value) != true)) {
                    this.CheckFlagField = value;
                    this.RaisePropertyChanged("CheckFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeleteFlag {
            get {
                return this.DeleteFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.DeleteFlagField, value) != true)) {
                    this.DeleteFlagField = value;
                    this.RaisePropertyChanged("DeleteFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDelete {
            get {
                return this.IsDeleteField;
            }
            set {
                if ((this.IsDeleteField.Equals(value) != true)) {
                    this.IsDeleteField = value;
                    this.RaisePropertyChanged("IsDelete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TermService.ITermAppl")]
    public interface ITermAppl {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITermAppl/GetAllTerms", ReplyAction="http://tempuri.org/ITermAppl/GetAllTermsResponse")]
        TextbookManage.WebUI.TermService.TermView[] GetAllTerms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITermAppl/GetAllTerms", ReplyAction="http://tempuri.org/ITermAppl/GetAllTermsResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.TermService.TermView[]> GetAllTermsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITermAppl/GetCurrent", ReplyAction="http://tempuri.org/ITermAppl/GetCurrentResponse")]
        TextbookManage.WebUI.TermService.TermView GetCurrent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITermAppl/GetCurrent", ReplyAction="http://tempuri.org/ITermAppl/GetCurrentResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.TermService.TermView> GetCurrentAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITermApplChannel : TextbookManage.WebUI.TermService.ITermAppl, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TermApplClient : System.ServiceModel.ClientBase<TextbookManage.WebUI.TermService.ITermAppl>, TextbookManage.WebUI.TermService.ITermAppl {
        
        public TermApplClient() {
        }
        
        public TermApplClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TermApplClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TermApplClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TermApplClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TextbookManage.WebUI.TermService.TermView[] GetAllTerms() {
            return base.Channel.GetAllTerms();
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.TermService.TermView[]> GetAllTermsAsync() {
            return base.Channel.GetAllTermsAsync();
        }
        
        public TextbookManage.WebUI.TermService.TermView GetCurrent() {
            return base.Channel.GetCurrent();
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.TermService.TermView> GetCurrentAsync() {
            return base.Channel.GetCurrentAsync();
        }
    }
}
