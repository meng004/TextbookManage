//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18046
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TextbookManage.WebUI.CasMapperService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CasMapperView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    public partial class CasMapperView : TextbookManage.WebUI.CasMapperService.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasNetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasNetId {
            get {
                return this.CasNetIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CasNetIdField, value) != true)) {
                    this.CasNetIdField = value;
                    this.RaisePropertyChanged("CasNetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCard {
            get {
                return this.IdCardField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCardField, value) != true)) {
                    this.IdCardField = value;
                    this.RaisePropertyChanged("IdCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseViewModel", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.CasMapperService.ResponseView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TextbookManage.WebUI.CasMapperService.CasMapperView))]
    public partial class BaseViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeleteFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckFlag {
            get {
                return this.CheckFlagField;
            }
            set {
                if ((this.CheckFlagField.Equals(value) != true)) {
                    this.CheckFlagField = value;
                    this.RaisePropertyChanged("CheckFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeleteFlag {
            get {
                return this.DeleteFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.DeleteFlagField, value) != true)) {
                    this.DeleteFlagField = value;
                    this.RaisePropertyChanged("DeleteFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDelete {
            get {
                return this.IsDeleteField;
            }
            set {
                if ((this.IsDeleteField.Equals(value) != true)) {
                    this.IsDeleteField = value;
                    this.RaisePropertyChanged("IsDelete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseView", Namespace="http://schemas.datacontract.org/2004/07/TextbookManage.ViewModels")]
    [System.SerializableAttribute()]
    public partial class ResponseView : TextbookManage.WebUI.CasMapperService.BaseViewModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CasMapperService.ICasMapperAppl")]
    public interface ICasMapperAppl {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/Import", ReplyAction="http://tempuri.org/ICasMapperAppl/ImportResponse")]
        TextbookManage.WebUI.CasMapperService.ResponseView Import(TextbookManage.WebUI.CasMapperService.CasMapperView[] casMappers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/Import", ReplyAction="http://tempuri.org/ICasMapperAppl/ImportResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.CasMapperService.ResponseView> ImportAsync(TextbookManage.WebUI.CasMapperService.CasMapperView[] casMappers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/Add", ReplyAction="http://tempuri.org/ICasMapperAppl/AddResponse")]
        TextbookManage.WebUI.CasMapperService.ResponseView Add(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/Add", ReplyAction="http://tempuri.org/ICasMapperAppl/AddResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.CasMapperService.ResponseView> AddAsync(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/Modify", ReplyAction="http://tempuri.org/ICasMapperAppl/ModifyResponse")]
        TextbookManage.WebUI.CasMapperService.ResponseView Modify(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/Modify", ReplyAction="http://tempuri.org/ICasMapperAppl/ModifyResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.CasMapperService.ResponseView> ModifyAsync(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/Remove", ReplyAction="http://tempuri.org/ICasMapperAppl/RemoveResponse")]
        TextbookManage.WebUI.CasMapperService.ResponseView Remove(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/Remove", ReplyAction="http://tempuri.org/ICasMapperAppl/RemoveResponse")]
        System.Threading.Tasks.Task<TextbookManage.WebUI.CasMapperService.ResponseView> RemoveAsync(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/GetUsernameByCasNetId", ReplyAction="http://tempuri.org/ICasMapperAppl/GetUsernameByCasNetIdResponse")]
        string GetUsernameByCasNetId(string casNetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasMapperAppl/GetUsernameByCasNetId", ReplyAction="http://tempuri.org/ICasMapperAppl/GetUsernameByCasNetIdResponse")]
        System.Threading.Tasks.Task<string> GetUsernameByCasNetIdAsync(string casNetId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICasMapperApplChannel : TextbookManage.WebUI.CasMapperService.ICasMapperAppl, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CasMapperApplClient : System.ServiceModel.ClientBase<TextbookManage.WebUI.CasMapperService.ICasMapperAppl>, TextbookManage.WebUI.CasMapperService.ICasMapperAppl {
        
        public CasMapperApplClient() {
        }
        
        public CasMapperApplClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CasMapperApplClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CasMapperApplClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CasMapperApplClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TextbookManage.WebUI.CasMapperService.ResponseView Import(TextbookManage.WebUI.CasMapperService.CasMapperView[] casMappers) {
            return base.Channel.Import(casMappers);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.CasMapperService.ResponseView> ImportAsync(TextbookManage.WebUI.CasMapperService.CasMapperView[] casMappers) {
            return base.Channel.ImportAsync(casMappers);
        }
        
        public TextbookManage.WebUI.CasMapperService.ResponseView Add(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper) {
            return base.Channel.Add(casMapper);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.CasMapperService.ResponseView> AddAsync(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper) {
            return base.Channel.AddAsync(casMapper);
        }
        
        public TextbookManage.WebUI.CasMapperService.ResponseView Modify(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper) {
            return base.Channel.Modify(casMapper);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.CasMapperService.ResponseView> ModifyAsync(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper) {
            return base.Channel.ModifyAsync(casMapper);
        }
        
        public TextbookManage.WebUI.CasMapperService.ResponseView Remove(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper) {
            return base.Channel.Remove(casMapper);
        }
        
        public System.Threading.Tasks.Task<TextbookManage.WebUI.CasMapperService.ResponseView> RemoveAsync(TextbookManage.WebUI.CasMapperService.CasMapperView casMapper) {
            return base.Channel.RemoveAsync(casMapper);
        }
        
        public string GetUsernameByCasNetId(string casNetId) {
            return base.Channel.GetUsernameByCasNetId(casNetId);
        }
        
        public System.Threading.Tasks.Task<string> GetUsernameByCasNetIdAsync(string casNetId) {
            return base.Channel.GetUsernameByCasNetIdAsync(casNetId);
        }
    }
}
