<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <!-- Begin:Unity -->
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <!--Begin:Interface-->
    <!--Infrastructure-->
    <alias alias="IUnitOfWork" type="TextbookManage.Infrastructure.UnitOfWork.IUnitOfWork,TextbookManage.Infrastructure"></alias>
    <alias alias="ILogger" type="TextbookManage.Infrastructure.Logger.ILogger,TextbookManage.Infrastructure"></alias>
    <alias alias="ITypeAdapter" type="TextbookManage.Infrastructure.TypeAdapter.ITypeAdapter,TextbookManage.Infrastructure"></alias>
    <alias alias="ICacheProvider" type="TextbookManage.Infrastructure.Cache.ICacheProvider,TextbookManage.Infrastructure"></alias>
    <!--Repository-->
    <alias alias="IRepository`1" type="TextbookManage.Domain.IRepositories.IRepository`1,TextbookManage.Domain"></alias>
    <!--Application-->
    <!--End:Interface-->
    <!--Begin:Implement-->
    <!--Infrastructure-->
    <alias alias="TypeAdapter" type="TextbookManage.Infrastructure.TypeAdapter.AutoMapperTypeAdapter,TextbookManage.Infrastructure"></alias>
    <alias alias="Logger" type="TextbookManage.Infrastructure.Logger.Log4netLogger,TextbookManage.Infrastructure"></alias>
    <alias alias="CacheProvider" type="TextbookManage.Infrastructure.Cache.CacheProvider,TextbookManage.Infrastructure"></alias>
    <!-- Interception -->
    <alias alias="ExceptionLogger" type="TextbookManage.Infrastructure.InterceptionBehaviors.ExceptionLoggerBehavior,TextbookManage.Infrastructure"></alias>
    <alias alias="Cache" type="TextbookManage.Infrastructure.InterceptionBehaviors.CacheBehavior,TextbookManage.Infrastructure"></alias>
    <!--Repository-->
    <!--<alias alias="UnitOfWork" type="TextbookManage.Repository.EFUnitOfWork,TextbookManage.Repository"></alias>
    <alias alias="Repository`1" type="TextbookManage.Repository.Repository`1,TextbookManage.Repository"></alias>-->
    <!--Application-->
    <!--End:Implement-->
    <container>
      <extension type="Interception" />
      <register type="ITypeAdapter" mapTo="TypeAdapter"></register>
      <register type="ILogger" mapTo="Logger">
        <constructor>
          <param name="name" type="string" value="TextbookManage.Logger"></param>
        </constructor>
      </register>
      <register type="ILogger" mapTo="Logger" name="ExceptionLogger">
        <constructor>
          <param name="name" type="string" value="TextbookManage.ExceptionLogger"></param>
        </constructor>
      </register>
      <register type="ICacheProvider" mapTo="CacheProvider">
        <lifetime type="singleton" />
      </register>
      <!--<register type="IUnitOfWork" mapTo="UnitOfWork">
        <lifetime type="transient" />
      </register>
      <register type="IRepository`1" mapTo="Repository`1"></register>-->
      <!--Begin:拦截器示例-->
      <!--<register type="IBookApplication" mapTo="BookApplication">
        <interceptor type="InterfaceInterceptor"/>
        <interceptionBehavior type="ExceptionLogging"/>
        <interceptionBehavior type="Cache"/>
        <interceptor type="TransparentProxyInterceptor"/>
        <interceptionBehavior type="PolicyInjectionBehavior"/>
      </register>-->
      <!--End:拦截器示例-->
      <!--Begin:策略注入示例-->
      <!--<interception>
        <policy name="AddCacheForGet">
          <matchingRule name="MatchName" type="MemberNameMatchingRule">
            <constructor>
              <param name="namesToMatch">
                <array type="string[]">
                  <value value="Get*"/>
                </array>
              </param>
            </constructor>
          </matchingRule>
          <callHandler name="AddCache" type="AddCacheHandler"></callHandler>
        </policy>
      </interception>-->
      <!--End:策略注入示例-->
    </container>
  </unity>
  <!-- End:Unity -->
  <!-- Begin:log4net -->
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\Log.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="1MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%newline%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="ExceptionRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\ExceptionLog.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="1MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%newline%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <logger name="TextbookManage.Logger">
      <level value="Info" />
      <appender-ref ref="RollingFileAppender" />
    </logger>
    <logger name="TextbookManage.ExceptionLogger">
      <level value="Info" />
      <appender-ref ref="ExceptionRollingFileAppender" />
    </logger>
  </log4net>
  <!-- End:log4net -->
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Configuration" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.505.0" newVersion="2.1.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.414.0" newVersion="2.0.414.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>