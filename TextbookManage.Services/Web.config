<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    
  <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 --></configSections>
  <!-- Begin:Unity -->
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <!--Begin:Interface-->
    <!--Infrastructure-->
    <alias alias="IUnitOfWork" type="TextbookManage.Infrastructure.UnitOfWork.IUnitOfWork,TextbookManage.Infrastructure"></alias>
    <alias alias="ILogger" type="TextbookManage.Infrastructure.Logger.ILogger,TextbookManage.Infrastructure"></alias>
    <alias alias="ITypeAdapter" type="TextbookManage.Infrastructure.TypeAdapter.ITypeAdapter,TextbookManage.Infrastructure"></alias>
    <alias alias="ICacheProvider" type="TextbookManage.Infrastructure.Cache.ICacheProvider,TextbookManage.Infrastructure"></alias>
    <!--Repository-->
    <alias alias="IRepository`1" type="TextbookManage.Domain.IRepositories.IRepository`1,TextbookManage.Domain"></alias>
    <alias alias="IBooksellerRepository" type="TextbookManage.Domain.IRepositories.IBooksellerRepository,TextbookManage.Domain"></alias>
    <alias alias="IDataSignRepository" type="TextbookManage.Domain.IRepositories.IDataSignRepository,TextbookManage.Domain"></alias>
    <alias alias="IDeclarationRepository" type="TextbookManage.Domain.IRepositories.IDeclarationRepository,TextbookManage.Domain"></alias>
    <alias alias="IDepartmentRepository" type="TextbookManage.Domain.IRepositories.IDepartmentRepository,TextbookManage.Domain"></alias>
    <alias alias="IProfessionalClassRepository" type="TextbookManage.Domain.IRepositories.IProfessionalClassRepository,TextbookManage.Domain"></alias>
    <alias alias="ISchoolRepository" type="TextbookManage.Domain.IRepositories.ISchoolRepository,TextbookManage.Domain"></alias>
    <alias alias="IStorageRepository" type="TextbookManage.Domain.IRepositories.IStorageRepository,TextbookManage.Domain"></alias>
    <alias alias="IInventoryRepository" type="TextbookManage.Domain.IRepositories.IInventoryRepository,TextbookManage.Domain"></alias>
    <alias alias="IOutStockRecordRepository" type="TextbookManage.Domain.IRepositories.IOutStockRecordRepository,TextbookManage.Domain"></alias>
    <alias alias="IInStockRecordRepository" type="TextbookManage.Domain.IRepositories.IInStockRecordRepository,TextbookManage.Domain"></alias>
    <alias alias="IPressRepository" type="TextbookManage.Domain.IRepositories.IPressRepository,TextbookManage.Domain"></alias>
    <alias alias="ICasMapperRepository" type="TextbookManage.Domain.IRepositories.ICasMapperRepository,TextbookManage.Domain"></alias>
    <alias alias="IStudentDeclarationRepository" type="TextbookManage.Domain.IRepositories.IStudentDeclarationRepository,TextbookManage.Domain"></alias>
    <alias alias="IStudentReleaseRecordRepository" type="TextbookManage.Domain.IRepositories.IStudentReleaseRecordRepository,TextbookManage.Domain"></alias>
    <alias alias="IStudentRepository" type="TextbookManage.Domain.IRepositories.IStudentRepository,TextbookManage.Domain"></alias>
    <alias alias="ISubscriptionRepository" type="TextbookManage.Domain.IRepositories.ISubscriptionRepository,TextbookManage.Domain"></alias>
    <alias alias="IFeedbackRepository" type="TextbookManage.Domain.IRepositories.IFeedbackRepository,TextbookManage.Domain"></alias>
    <alias alias="ITbmisUserRepository" type="TextbookManage.Domain.IRepositories.ITbmisUserRepository,TextbookManage.Domain"></alias>
    <alias alias="ITeacherDeclarationRepository" type="TextbookManage.Domain.IRepositories.ITeacherDeclarationRepository,TextbookManage.Domain"></alias>
    <alias alias="ITeacherReleaseRecordRepository" type="TextbookManage.Domain.IRepositories.ITeacherReleaseRecordRepository,TextbookManage.Domain"></alias>
    <alias alias="ITeacherRepository" type="TextbookManage.Domain.IRepositories.ITeacherRepository,TextbookManage.Domain"></alias>
    <alias alias="ITeachingTaskRepository" type="TextbookManage.Domain.IRepositories.ITeachingTaskRepository,TextbookManage.Domain"></alias>
    <alias alias="ITermRepository" type="TextbookManage.Domain.IRepositories.ITermRepository,TextbookManage.Domain"></alias>
    <alias alias="ITextbookRepository" type="TextbookManage.Domain.IRepositories.ITextbookRepository,TextbookManage.Domain"></alias>
    <!--Application-->
    <alias alias="IDeclarationAppl" type="TextbookManage.IApplications.IDeclarationAppl,TextbookManage.IApplications" />
    <alias alias="IDeclarationApprovalAppl" type="TextbookManage.IApplications.IDeclarationApprovalAppl,TextbookManage.IApplications" />
    <alias alias="IDeclarationProgressAppl" type="TextbookManage.IApplications.IDeclarationProgressAppl,TextbookManage.IApplications" />
    <alias alias="IDeclarationQueryAppl" type="TextbookManage.IApplications.IDeclarationQueryAppl,TextbookManage.IApplications" />
    <alias alias="IFeedbackAppl" type="TextbookManage.IApplications.IFeedbackAppl,TextbookManage.IApplications" />
    <alias alias="IFeedbackApprovalAppl" type="TextbookManage.IApplications.IFeedbackApprovalAppl,TextbookManage.IApplications" />
    <alias alias="ISubscriptionAppl" type="TextbookManage.IApplications.ISubscriptionAppl,TextbookManage.IApplications" />
    <alias alias="ITextbookAppl" type="TextbookManage.IApplications.ITextbookAppl,TextbookManage.IApplications" />
    <alias alias="ITextbookFeeAppl" type="TextbookManage.IApplications.ITextbookFeeAppl,TextbookManage.IApplications" />
    <alias alias="IReleaseTextbookForQueryAppl" type="TextbookManage.IApplications.IReleaseTextbookForQueryAppl,TextbookManage.IApplications" />
    <alias alias="IReleaseStudentBookAppl" type="TextbookManage.IApplications.IReleaseStudentBookAppl,TextbookManage.IApplications" />
    <alias alias="IReleaseClassBookAppl" type="TextbookManage.IApplications.IReleaseClassBookAppl,TextbookManage.IApplications" />
    <alias alias="IDropClassBookAppl" type="TextbookManage.IApplications.IDropClassBookAppl,TextbookManage.IApplications" />
    <alias alias="IDropStudentBookAppl" type="TextbookManage.IApplications.IDropStudentBookAppl,TextbookManage.IApplications" />
    <alias alias="IInventoryAppl" type="TextbookManage.IApplications.IInventoryAppl,TextbookManage.IApplications" />
    <alias alias="ITextbookApprovalAppl" type="TextbookManage.IApplications.ITextbookApprovalAppl,TextbookManage.IApplications" />
    <alias alias="IReleaseClassBookAppl" type="TextbookManage.IApplications.IReleaseClassBookAppl,TextbookManage.IApplications" />
    <alias alias="ICasMapperAppl" type="TextbookManage.IApplications.ICasMapperAppl,TextbookManage.IApplications" />
    <!-- Domain -->
    <alias alias="IDiscountStrategy" type="TextbookManage.Domain.Models.IDiscountStrategy,TextbookManage.Domain" />
    <!--End:Interface-->
    <!--Begin:Implement-->
    <!--Infrastructure-->
    <alias alias="TypeAdapter" type="TextbookManage.Infrastructure.TypeAdapter.AutoMapperTypeAdapter,TextbookManage.Infrastructure"></alias>
    <alias alias="Logger" type="TextbookManage.Infrastructure.Logger.Log4netLogger,TextbookManage.Infrastructure"></alias>
    <alias alias="CacheProvider" type="TextbookManage.Infrastructure.Cache.CacheProvider,TextbookManage.Infrastructure"></alias>
    <!-- Interception -->
    <alias alias="ExceptionLogger" type="TextbookManage.Infrastructure.InterceptionBehaviors.ExceptionLoggerBehavior,TextbookManage.Infrastructure"></alias>
    <alias alias="CacheAop" type="TextbookManage.Infrastructure.InterceptionBehaviors.CacheBehavior,TextbookManage.Infrastructure"></alias>
    <!-- Repository -->
    <alias alias="UnitOfWork" type="TextbookManage.Repositories.TbMisUnitOfWork,TextbookManage.Repositories"></alias>
    <alias alias="Repository`1" type="TextbookManage.Repositories.Repository`1,TextbookManage.Repositories"></alias>
    <alias alias="BooksellerRepository" type="TextbookManage.Repositories.BooksellerRepository,TextbookManage.Repositories"></alias>
    <alias alias="DataSignRepository" type="TextbookManage.Repositories.DataSignRepository,TextbookManage.Repositories"></alias>
    <alias alias="DeclarationRepository" type="TextbookManage.Repositories.DeclarationRepository,TextbookManage.Repositories"></alias>
    <alias alias="DepartmentRepository" type="TextbookManage.Repositories.DepartmentRepository,TextbookManage.Repositories"></alias>
    <alias alias="ProfessionalClassRepository" type="TextbookManage.Repositories.ProfessionalClassRepository,TextbookManage.Repositories"></alias>
    <alias alias="SchoolRepository" type="TextbookManage.Repositories.SchoolRepository,TextbookManage.Repositories"></alias>
    <alias alias="StorageRepository" type="TextbookManage.Repositories.StorageRepository,TextbookManage.Repositories"></alias>
    <alias alias="InventoryRepository" type="TextbookManage.Repositories.InventoryRepository,TextbookManage.Repositories"></alias>
    <alias alias="InStockRecordRepository" type="TextbookManage.Repositories.InStockRecordRepository,TextbookManage.Repositories"></alias>
    <alias alias="OutStockRecordRepository" type="TextbookManage.Repositories.OutStockRecordRepository,TextbookManage.Repositories"></alias>
    <alias alias="PressRepository" type="TextbookManage.Repositories.PressRepository,TextbookManage.Repositories"></alias>
    <alias alias="CasMapperRepository" type="TextbookManage.Repositories.CasMapperRepository,TextbookManage.Repositories"></alias>
    <alias alias="StudentDeclarationRepository" type="TextbookManage.Repositories.StudentDeclarationRepository,TextbookManage.Repositories"></alias>
    <alias alias="StudentReleaseRecordRepository" type="TextbookManage.Repositories.StudentReleaseRecordRepository,TextbookManage.Repositories"></alias>
    <alias alias="StudentRepository" type="TextbookManage.Repositories.StudentRepository,TextbookManage.Repositories"></alias>
    <alias alias="SubscriptionRepository" type="TextbookManage.Repositories.SubscriptionRepository,TextbookManage.Repositories"></alias>
    <alias alias="FeedbackRepository" type="TextbookManage.Repositories.FeedbackRepository,TextbookManage.Repositories"></alias>
    <alias alias="TbmisUserRepository" type="TextbookManage.Repositories.TbmisUserRepository,TextbookManage.Repositories"></alias>
    <alias alias="TeacherDeclarationRepository" type="TextbookManage.Repositories.TeacherDeclarationRepository,TextbookManage.Repositories"></alias>
    <alias alias="TeacherReleaseRecordRepository" type="TextbookManage.Repositories.TeacherReleaseRecordRepository,TextbookManage.Repositories"></alias>
    <alias alias="TeacherRepository" type="TextbookManage.Repositories.TeacherRepository,TextbookManage.Repositories"></alias>
    <alias alias="TeachingTaskRepository" type="TextbookManage.Repositories.TeachingTaskRepository,TextbookManage.Repositories"></alias>
    <alias alias="TermRepository" type="TextbookManage.Repositories.TermRepository,TextbookManage.Repositories"></alias>
    <alias alias="TextbookRepository" type="TextbookManage.Repositories.TextbookRepository,TextbookManage.Repositories"></alias>
    <!--Application-->
    <alias alias="DeclarationAppl" type="TextbookManage.Applications.Impl.DeclarationAppl,TextbookManage.Applications" />
    <alias alias="DeclarationApprovalAppl" type="TextbookManage.Applications.Impl.DeclarationApprovalAppl,TextbookManage.Applications" />
    <alias alias="DeclarationProgressAppl" type="TextbookManage.Applications.Impl.DeclarationProgressAppl,TextbookManage.Applications" />
    <alias alias="DeclarationQueryAppl" type="TextbookManage.Applications.Impl.DeclarationQueryAppl,TextbookManage.Applications" />
    <alias alias="FeedbackAppl" type="TextbookManage.Applications.Impl.FeedbackAppl,TextbookManage.Applications" />
    <alias alias="FeedbackApprovalAppl" type="TextbookManage.Applications.Impl.FeedbackApprovalAppl,TextbookManage.Applications" />
    <alias alias="SubscriptionAppl" type="TextbookManage.Applications.Impl.SubscriptionAppl,TextbookManage.Applications" />
    <alias alias="TextbookAppl" type="TextbookManage.Applications.Impl.TextbookAppl,TextbookManage.Applications" />
    <alias alias="TextbookFeeAppl" type="TextbookManage.Applications.Impl.TextbookFeeAppl,TextbookManage.Applications" />
    <alias alias="DropClassBookAppl" type="TextbookManage.Applications.Impl.DropClassBookAppl,TextbookManage.Applications" />
    <alias alias="DropStudentBookAppl" type="TextbookManage.Applications.Impl.DropStudentBookAppl,TextbookManage.Applications" />
    <alias alias="InventoryAppl" type="TextbookManage.Applications.Impl.InventoryAppl,TextbookManage.Applications" />
    <alias alias="TextbookApprovalAppl" type="TextbookManage.Applications.Impl.TextbookApprovalAppl,TextbookManage.Applications" />
    <alias alias="ReleaseClassBookAppl" type="TextbookManage.Applications.Impl.ReleaseClassBookAppl,TextbookManage.Applications" />
    <alias alias="CasMapperAppl" type="TextbookManage.Applications.Impl.CasMapperAppl,TextbookManage.Applications" />
    <!-- Domain -->
    <alias alias="DiscountStrategyByName" type="TextbookManage.Domain.Models.DiscountStrategyByName,TextbookManage.Domain" />
    <!--End:Implement-->
    <container>
      <extension type="Interception" />
      <!-- Begin:Domain-->
      <register type="IDiscountStrategy" mapTo="DiscountStrategyByName"></register>
      <!-- End:Domain-->
      <!-- Begin:Infrastructure-->
      <register type="ITypeAdapter" mapTo="TypeAdapter"></register>
      <register type="ILogger" mapTo="Logger" name="Logger">
        <constructor>
          <param name="name" type="string" value="TextbookManage.Logger"></param>
        </constructor>
      </register>
      <register type="ILogger" mapTo="Logger" name="ExceptionLogger">
        <constructor>
          <param name="name" type="string" value="TextbookManage.ExceptionLogger"></param>
        </constructor>
      </register>
      <register type="ICacheProvider" mapTo="CacheProvider">
        <lifetime type="singleton" />
      </register>
      <!--<register type="IUnitOfWork" mapTo="JwUnitOfWork" name="JwUow"></register>-->
      <!--<register type="IRepository`1" mapTo="Repository`1" name="Jw">
        <constructor>
          <param name="unitOfWork" dependencyType="IUnitOfWork" dependencyName="JwUow"></param>
        </constructor>
      </register>-->
      <register type="IUnitOfWork" mapTo="UnitOfWork"></register>
      <register type="IUnitOfWork" mapTo="UnitOfWork" name="Update"></register>
      <!-- End:Infrastructure-->
      <!-- Begin:Repository -->
      <register type="IRepository`1" mapTo="Repository`1"></register>
      <register type="IBooksellerRepository" mapTo="BooksellerRepository"></register>
      <register type="IDataSignRepository" mapTo="DataSignRepository"></register>
      <register type="IDeclarationRepository" mapTo="DeclarationRepository"></register>
      <register type="IDepartmentRepository" mapTo="DepartmentRepository"></register>
      <register type="IProfessionalClassRepository" mapTo="ProfessionalClassRepository"></register>
      <register type="ISchoolRepository" mapTo="SchoolRepository"></register>
      <register type="IStorageRepository" mapTo="StorageRepository"></register>
      <register type="IStudentDeclarationRepository" mapTo="StudentDeclarationRepository"></register>
      <register type="IStudentReleaseRecordRepository" mapTo="StudentReleaseRecordRepository"></register>
      <register type="IStudentRepository" mapTo="StudentRepository"></register>
      <register type="ISubscriptionRepository" mapTo="SubscriptionRepository"></register>
      <register type="IFeedbackRepository" mapTo="FeedbackRepository"></register>
      <register type="ITbmisUserRepository" mapTo="TbmisUserRepository"></register>
      <register type="ITeacherDeclarationRepository" mapTo="TeacherDeclarationRepository"></register>
      <register type="ITeacherReleaseRecordRepository" mapTo="TeacherReleaseRecordRepository"></register>
      <register type="ITeacherRepository" mapTo="TeacherRepository"></register>
      <register type="ITeachingTaskRepository" mapTo="TeachingTaskRepository"></register>
      <register type="ITermRepository" mapTo="TermRepository"></register>
      <register type="ITextbookRepository" mapTo="TextbookRepository"></register>
      <register type="IInventoryRepository" mapTo="InventoryRepository"></register>
      <register type="IOutStockRecordRepository" mapTo="OutStockRecordRepository"></register>
      <register type="IInStockRecordRepository" mapTo="InStockRecordRepository"></register>
      <register type="IPressRepository" mapTo="PressRepository"></register>
      <register type="ICasMapperRepository" mapTo="CasMapperRepository"></register>
      <!-- End:Repository -->
      <!-- Begin:Application -->
      <register type="IDeclarationAppl" mapTo="DeclarationAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="IDeclarationApprovalAppl" mapTo="DeclarationApprovalAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="IDeclarationProgressAppl" mapTo="DeclarationProgressAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="IDeclarationQueryAppl" mapTo="DeclarationQueryAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="ISubscriptionAppl" mapTo="SubscriptionAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="IFeedbackAppl" mapTo="FeedbackAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="IFeedbackApprovalAppl" mapTo="FeedbackApprovalAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <!--<register type="ISubscriptionAppl" mapTo="SubscriptionAppl"></register>-->
      <register type="ITextbookAppl" mapTo="TextbookAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="ITextbookFeeAppl" mapTo="TextbookFeeAppl"></register>
      <!--<register type="IReleaseTextbookForQueryAppl" mapTo="ReleaseTextbookForQueryAppl"></register>
      <register type="IReleaseStudentBookAppl" mapTo="ReleaseStudentBookAppl"></register>
      <register type="IReleaseClassBookAppl" mapTo="ReleaseClassBookAppl"></register>-->
      <register type="IDropStudentBookAppl" mapTo="DropStudentBookAppl"></register>
      <register type="IDropClassBookAppl" mapTo="DropClassBookAppl"></register>
      <register type="IInventoryAppl" mapTo="InventoryAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="ITextbookApprovalAppl" mapTo="TextbookApprovalAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="IReleaseClassBookAppl" mapTo="ReleaseClassBookAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="CacheAop" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <register type="ICasMapperAppl" mapTo="CasMapperAppl">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="ExceptionLogger" />
      </register>
      <!-- End:Application -->
      <!--<register type="ISchoolService" mapTo="SchoolService">
        <interceptor type="InterfaceInterceptor"/>
        <interceptionBehavior type="CacheAop"/>
        <interceptionBehavior type="ExceptionLogger"/>
      </register>-->
      <!--Begin:拦截器示例-->
      <!--<register type="IBookApplication" mapTo="BookApplication">
        <interceptor type="InterfaceInterceptor"/>
        <interceptionBehavior type="ExceptionLogging"/>
        <interceptionBehavior type="Cache"/>
        <interceptor type="TransparentProxyInterceptor"/>
        <interceptionBehavior type="PolicyInjectionBehavior"/>
      </register>-->
      <!--End:拦截器示例-->
      <!--Begin:策略注入示例-->
      <!--<interception>
        <policy name="AddCacheForGet">
          <matchingRule name="MatchName" type="MemberNameMatchingRule">
            <constructor>
              <param name="namesToMatch">
                <array type="string[]">
                  <value value="Get*"/>
                </array>
              </param>
            </constructor>
          </matchingRule>
          <callHandler name="AddCache" type="AddCacheHandler"></callHandler>
        </policy>
      </interception>-->
      <!--End:策略注入示例-->
    </container>
  </unity>
  <!-- End:Unity -->
  <!-- Begin:log4net -->
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\Log.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="1MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%newline%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="ExceptionRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\ExceptionLog.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="1MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%newline%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <logger name="TextbookManage.Logger">
      <level value="Info" />
      <appender-ref ref="RollingFileAppender" />
    </logger>
    <logger name="TextbookManage.ExceptionLogger">
      <level value="Info" />
      <appender-ref ref="ExceptionRollingFileAppender" />
    </logger>
  </log4net>
  <!-- End:log4net -->
  <connectionStrings>
    <add name="TbMisContext" connectionString="Data Source=210.43.126.50,4134;Initial Catalog=NHU_JWDB;User ID=sa;Password=Usc1tamis#usc.edu.cn" providerName="System.Data.SqlClient" />
    <!--<add name="TbMisContext" connectionString="Data Source=210.43.118.193\sql2008r2,4134;Initial Catalog=NHU_JWDB;User ID=tbmis;Password=0000" providerName="System.Data.SqlClient" />-->
    <!--<add name="TbMisContext" connectionString="Data Source=.;Initial Catalog=nhu_jwdb;Integrated Security=True;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />-->
  </connectionStrings>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- 为避免泄漏元数据信息，请在部署前将以下值设置为 false -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <!-- 要接收故障异常详细信息以进行调试，请将以下值设置为 true。在部署前设置为 false 以避免泄漏异常信息 -->
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        若要在调试过程中浏览 Web 应用程序根目录，请将下面的值设置为 True。
        在部署之前将该值设置为 False 可避免泄露 Web 应用程序文件夹信息。
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Configuration" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.3.0.0" newVersion="1.3.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>